#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ARFI_POS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ArfiPlusPerfurmes")]
	public partial class arfiplusDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblPayment(tblPayment instance);
    partial void UpdatetblPayment(tblPayment instance);
    partial void DeletetblPayment(tblPayment instance);
    partial void InserttblProduct(tblProduct instance);
    partial void UpdatetblProduct(tblProduct instance);
    partial void DeletetblProduct(tblProduct instance);
    partial void InserttblInvoice(tblInvoice instance);
    partial void UpdatetblInvoice(tblInvoice instance);
    partial void DeletetblInvoice(tblInvoice instance);
    partial void InserttblSupplier(tblSupplier instance);
    partial void UpdatetblSupplier(tblSupplier instance);
    partial void DeletetblSupplier(tblSupplier instance);
    partial void InserttblSale(tblSale instance);
    partial void UpdatetblSale(tblSale instance);
    partial void DeletetblSale(tblSale instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblEmployee(tblEmployee instance);
    partial void UpdatetblEmployee(tblEmployee instance);
    partial void DeletetblEmployee(tblEmployee instance);
    partial void InserttblLoan(tblLoan instance);
    partial void UpdatetblLoan(tblLoan instance);
    partial void DeletetblLoan(tblLoan instance);
    partial void InserttblCustomer(tblCustomer instance);
    partial void UpdatetblCustomer(tblCustomer instance);
    partial void DeletetblCustomer(tblCustomer instance);
    #endregion
		
		public arfiplusDBDataContext() : 
				base(global::ARFI_POS.Properties.Settings.Default.ArfiPlusPerfurmesConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public arfiplusDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public arfiplusDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public arfiplusDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public arfiplusDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblPayment> tblPayments
		{
			get
			{
				return this.GetTable<tblPayment>();
			}
		}
		
		public System.Data.Linq.Table<tblProduct> tblProducts
		{
			get
			{
				return this.GetTable<tblProduct>();
			}
		}
		
		public System.Data.Linq.Table<tblInvoice> tblInvoices
		{
			get
			{
				return this.GetTable<tblInvoice>();
			}
		}
		
		public System.Data.Linq.Table<tblSupplier> tblSuppliers
		{
			get
			{
				return this.GetTable<tblSupplier>();
			}
		}
		
		public System.Data.Linq.Table<tblSale> tblSales
		{
			get
			{
				return this.GetTable<tblSale>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblEmployee> tblEmployees
		{
			get
			{
				return this.GetTable<tblEmployee>();
			}
		}
		
		public System.Data.Linq.Table<tblLoan> tblLoans
		{
			get
			{
				return this.GetTable<tblLoan>();
			}
		}
		
		public System.Data.Linq.Table<tblCustomer> tblCustomers
		{
			get
			{
				return this.GetTable<tblCustomer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPayment")]
	public partial class tblPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _payment_id;
		
		private System.Nullable<int> _customer_id;
		
		private string _paymentStatus;
		
		private System.Nullable<float> _netPaid;
		
		private System.Nullable<float> _discount;
		
		private System.Nullable<float> _netProfit;
		
		private System.Nullable<int> _invoice_id;
		
		private string _currency;
		
		private System.Nullable<float> _onhand;
		
		private System.Nullable<float> _zaad;
		
		private System.Nullable<float> _edahab;
		
		private System.Nullable<float> _soltelco;
		
		private System.Nullable<float> _bank;
		
		private System.Nullable<float> _other;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _returned;
		
		private string _note;
		
		private EntitySet<tblSale> _tblSales;
		
		private EntityRef<tblInvoice> _tblInvoice;
		
		private EntityRef<tblCustomer> _tblCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpayment_idChanging(int value);
    partial void Onpayment_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void OnpaymentStatusChanging(string value);
    partial void OnpaymentStatusChanged();
    partial void OnnetPaidChanging(System.Nullable<float> value);
    partial void OnnetPaidChanged();
    partial void OndiscountChanging(System.Nullable<float> value);
    partial void OndiscountChanged();
    partial void OnnetProfitChanging(System.Nullable<float> value);
    partial void OnnetProfitChanged();
    partial void Oninvoice_idChanging(System.Nullable<int> value);
    partial void Oninvoice_idChanged();
    partial void OncurrencyChanging(string value);
    partial void OncurrencyChanged();
    partial void OnonhandChanging(System.Nullable<float> value);
    partial void OnonhandChanged();
    partial void OnzaadChanging(System.Nullable<float> value);
    partial void OnzaadChanged();
    partial void OnedahabChanging(System.Nullable<float> value);
    partial void OnedahabChanged();
    partial void OnsoltelcoChanging(System.Nullable<float> value);
    partial void OnsoltelcoChanged();
    partial void OnbankChanging(System.Nullable<float> value);
    partial void OnbankChanged();
    partial void OnotherChanging(System.Nullable<float> value);
    partial void OnotherChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnreturnedChanging(string value);
    partial void OnreturnedChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public tblPayment()
		{
			this._tblSales = new EntitySet<tblSale>(new Action<tblSale>(this.attach_tblSales), new Action<tblSale>(this.detach_tblSales));
			this._tblInvoice = default(EntityRef<tblInvoice>);
			this._tblCustomer = default(EntityRef<tblCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._tblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentStatus", DbType="VarChar(20)")]
		public string paymentStatus
		{
			get
			{
				return this._paymentStatus;
			}
			set
			{
				if ((this._paymentStatus != value))
				{
					this.OnpaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._paymentStatus = value;
					this.SendPropertyChanged("paymentStatus");
					this.OnpaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netPaid", DbType="Real")]
		public System.Nullable<float> netPaid
		{
			get
			{
				return this._netPaid;
			}
			set
			{
				if ((this._netPaid != value))
				{
					this.OnnetPaidChanging(value);
					this.SendPropertyChanging();
					this._netPaid = value;
					this.SendPropertyChanged("netPaid");
					this.OnnetPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Real")]
		public System.Nullable<float> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netProfit", DbType="Real")]
		public System.Nullable<float> netProfit
		{
			get
			{
				return this._netProfit;
			}
			set
			{
				if ((this._netProfit != value))
				{
					this.OnnetProfitChanging(value);
					this.SendPropertyChanging();
					this._netProfit = value;
					this.SendPropertyChanged("netProfit");
					this.OnnetProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="Int")]
		public System.Nullable<int> invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					if (this._tblInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="VarChar(20)")]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_onhand", DbType="Real")]
		public System.Nullable<float> onhand
		{
			get
			{
				return this._onhand;
			}
			set
			{
				if ((this._onhand != value))
				{
					this.OnonhandChanging(value);
					this.SendPropertyChanging();
					this._onhand = value;
					this.SendPropertyChanged("onhand");
					this.OnonhandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zaad", DbType="Real")]
		public System.Nullable<float> zaad
		{
			get
			{
				return this._zaad;
			}
			set
			{
				if ((this._zaad != value))
				{
					this.OnzaadChanging(value);
					this.SendPropertyChanging();
					this._zaad = value;
					this.SendPropertyChanged("zaad");
					this.OnzaadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edahab", DbType="Real")]
		public System.Nullable<float> edahab
		{
			get
			{
				return this._edahab;
			}
			set
			{
				if ((this._edahab != value))
				{
					this.OnedahabChanging(value);
					this.SendPropertyChanging();
					this._edahab = value;
					this.SendPropertyChanged("edahab");
					this.OnedahabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soltelco", DbType="Real")]
		public System.Nullable<float> soltelco
		{
			get
			{
				return this._soltelco;
			}
			set
			{
				if ((this._soltelco != value))
				{
					this.OnsoltelcoChanging(value);
					this.SendPropertyChanging();
					this._soltelco = value;
					this.SendPropertyChanged("soltelco");
					this.OnsoltelcoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="Real")]
		public System.Nullable<float> bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other", DbType="Real")]
		public System.Nullable<float> other
		{
			get
			{
				return this._other;
			}
			set
			{
				if ((this._other != value))
				{
					this.OnotherChanging(value);
					this.SendPropertyChanging();
					this._other = value;
					this.SendPropertyChanged("other");
					this.OnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returned", DbType="VarChar(20)")]
		public string returned
		{
			get
			{
				return this._returned;
			}
			set
			{
				if ((this._returned != value))
				{
					this.OnreturnedChanging(value);
					this.SendPropertyChanging();
					this._returned = value;
					this.SendPropertyChanged("returned");
					this.OnreturnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="VarChar(50)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPayment_tblSale", Storage="_tblSales", ThisKey="payment_id", OtherKey="payment_id")]
		public EntitySet<tblSale> tblSales
		{
			get
			{
				return this._tblSales;
			}
			set
			{
				this._tblSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInvoice_tblPayment", Storage="_tblInvoice", ThisKey="invoice_id", OtherKey="invoice_id", IsForeignKey=true)]
		public tblInvoice tblInvoice
		{
			get
			{
				return this._tblInvoice.Entity;
			}
			set
			{
				tblInvoice previousValue = this._tblInvoice.Entity;
				if (((previousValue != value) 
							|| (this._tblInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblInvoice.Entity = null;
						previousValue.tblPayments.Remove(this);
					}
					this._tblInvoice.Entity = value;
					if ((value != null))
					{
						value.tblPayments.Add(this);
						this._invoice_id = value.invoice_id;
					}
					else
					{
						this._invoice_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblPayment", Storage="_tblCustomer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public tblCustomer tblCustomer
		{
			get
			{
				return this._tblCustomer.Entity;
			}
			set
			{
				tblCustomer previousValue = this._tblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCustomer.Entity = null;
						previousValue.tblPayments.Remove(this);
					}
					this._tblCustomer.Entity = value;
					if ((value != null))
					{
						value.tblPayments.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblSales(tblSale entity)
		{
			this.SendPropertyChanging();
			entity.tblPayment = this;
		}
		
		private void detach_tblSales(tblSale entity)
		{
			this.SendPropertyChanging();
			entity.tblPayment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProduct")]
	public partial class tblProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _product_id;
		
		private string _product_name;
		
		private string _product_type;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<int> _barcode;
		
		private System.Nullable<float> _cost;
		
		private System.Nullable<float> _price;
		
		private System.Nullable<int> _supplier_id;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<System.DateTime> _last_update;
		
		private string _description;
		
		private EntitySet<tblSale> _tblSales;
		
		private EntitySet<tblLoan> _tblLoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onproduct_nameChanging(string value);
    partial void Onproduct_nameChanged();
    partial void Onproduct_typeChanging(string value);
    partial void Onproduct_typeChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnbarcodeChanging(System.Nullable<int> value);
    partial void OnbarcodeChanged();
    partial void OncostChanging(System.Nullable<float> value);
    partial void OncostChanged();
    partial void OnpriceChanging(System.Nullable<float> value);
    partial void OnpriceChanged();
    partial void Onsupplier_idChanging(System.Nullable<int> value);
    partial void Onsupplier_idChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onlast_updateChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public tblProduct()
		{
			this._tblSales = new EntitySet<tblSale>(new Action<tblSale>(this.attach_tblSales), new Action<tblSale>(this.detach_tblSales));
			this._tblLoans = new EntitySet<tblLoan>(new Action<tblLoan>(this.attach_tblLoans), new Action<tblLoan>(this.detach_tblLoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_name", DbType="VarChar(40)")]
		public string product_name
		{
			get
			{
				return this._product_name;
			}
			set
			{
				if ((this._product_name != value))
				{
					this.Onproduct_nameChanging(value);
					this.SendPropertyChanging();
					this._product_name = value;
					this.SendPropertyChanged("product_name");
					this.Onproduct_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_type", DbType="VarChar(20)")]
		public string product_type
		{
			get
			{
				return this._product_type;
			}
			set
			{
				if ((this._product_type != value))
				{
					this.Onproduct_typeChanging(value);
					this.SendPropertyChanging();
					this._product_type = value;
					this.SendPropertyChanged("product_type");
					this.Onproduct_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_barcode", DbType="Int")]
		public System.Nullable<int> barcode
		{
			get
			{
				return this._barcode;
			}
			set
			{
				if ((this._barcode != value))
				{
					this.OnbarcodeChanging(value);
					this.SendPropertyChanging();
					this._barcode = value;
					this.SendPropertyChanged("barcode");
					this.OnbarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Real")]
		public System.Nullable<float> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Real")]
		public System.Nullable<float> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="Int")]
		public System.Nullable<int> supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_update
		{
			get
			{
				return this._last_update;
			}
			set
			{
				if ((this._last_update != value))
				{
					this.Onlast_updateChanging(value);
					this.SendPropertyChanging();
					this._last_update = value;
					this.SendPropertyChanged("last_update");
					this.Onlast_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblSale", Storage="_tblSales", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<tblSale> tblSales
		{
			get
			{
				return this._tblSales;
			}
			set
			{
				this._tblSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblLoan", Storage="_tblLoans", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<tblLoan> tblLoans
		{
			get
			{
				return this._tblLoans;
			}
			set
			{
				this._tblLoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblSales(tblSale entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblSales(tblSale entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
		
		private void attach_tblLoans(tblLoan entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblLoans(tblLoan entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblInvoice")]
	public partial class tblInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _invoice_id;
		
		private System.Nullable<int> _customer_id;
		
		private System.Nullable<int> _user_id;
		
		private string _returned;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _transactionStatus;
		
		private EntitySet<tblPayment> _tblPayments;
		
		private EntitySet<tblSale> _tblSales;
		
		private EntitySet<tblLoan> _tblLoans;
		
		private EntityRef<tblEmployee> _tblEmployee;
		
		private EntityRef<tblCustomer> _tblCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oninvoice_idChanging(int value);
    partial void Oninvoice_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OnreturnedChanging(string value);
    partial void OnreturnedChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OntransactionStatusChanging(string value);
    partial void OntransactionStatusChanged();
    #endregion
		
		public tblInvoice()
		{
			this._tblPayments = new EntitySet<tblPayment>(new Action<tblPayment>(this.attach_tblPayments), new Action<tblPayment>(this.detach_tblPayments));
			this._tblSales = new EntitySet<tblSale>(new Action<tblSale>(this.attach_tblSales), new Action<tblSale>(this.detach_tblSales));
			this._tblLoans = new EntitySet<tblLoan>(new Action<tblLoan>(this.attach_tblLoans), new Action<tblLoan>(this.detach_tblLoans));
			this._tblEmployee = default(EntityRef<tblEmployee>);
			this._tblCustomer = default(EntityRef<tblCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._tblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._tblEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returned", DbType="VarChar(40)")]
		public string returned
		{
			get
			{
				return this._returned;
			}
			set
			{
				if ((this._returned != value))
				{
					this.OnreturnedChanging(value);
					this.SendPropertyChanging();
					this._returned = value;
					this.SendPropertyChanged("returned");
					this.OnreturnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(40)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionStatus", DbType="VarChar(20)")]
		public string transactionStatus
		{
			get
			{
				return this._transactionStatus;
			}
			set
			{
				if ((this._transactionStatus != value))
				{
					this.OntransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._transactionStatus = value;
					this.SendPropertyChanged("transactionStatus");
					this.OntransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInvoice_tblPayment", Storage="_tblPayments", ThisKey="invoice_id", OtherKey="invoice_id")]
		public EntitySet<tblPayment> tblPayments
		{
			get
			{
				return this._tblPayments;
			}
			set
			{
				this._tblPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInvoice_tblSale", Storage="_tblSales", ThisKey="invoice_id", OtherKey="invoice_id")]
		public EntitySet<tblSale> tblSales
		{
			get
			{
				return this._tblSales;
			}
			set
			{
				this._tblSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInvoice_tblLoan", Storage="_tblLoans", ThisKey="invoice_id", OtherKey="invoice_id")]
		public EntitySet<tblLoan> tblLoans
		{
			get
			{
				return this._tblLoans;
			}
			set
			{
				this._tblLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblInvoice", Storage="_tblEmployee", ThisKey="user_id", OtherKey="employee_id", IsForeignKey=true)]
		public tblEmployee tblEmployee
		{
			get
			{
				return this._tblEmployee.Entity;
			}
			set
			{
				tblEmployee previousValue = this._tblEmployee.Entity;
				if (((previousValue != value) 
							|| (this._tblEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEmployee.Entity = null;
						previousValue.tblInvoices.Remove(this);
					}
					this._tblEmployee.Entity = value;
					if ((value != null))
					{
						value.tblInvoices.Add(this);
						this._user_id = value.employee_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblInvoice", Storage="_tblCustomer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public tblCustomer tblCustomer
		{
			get
			{
				return this._tblCustomer.Entity;
			}
			set
			{
				tblCustomer previousValue = this._tblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCustomer.Entity = null;
						previousValue.tblInvoices.Remove(this);
					}
					this._tblCustomer.Entity = value;
					if ((value != null))
					{
						value.tblInvoices.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPayments(tblPayment entity)
		{
			this.SendPropertyChanging();
			entity.tblInvoice = this;
		}
		
		private void detach_tblPayments(tblPayment entity)
		{
			this.SendPropertyChanging();
			entity.tblInvoice = null;
		}
		
		private void attach_tblSales(tblSale entity)
		{
			this.SendPropertyChanging();
			entity.tblInvoice = this;
		}
		
		private void detach_tblSales(tblSale entity)
		{
			this.SendPropertyChanging();
			entity.tblInvoice = null;
		}
		
		private void attach_tblLoans(tblLoan entity)
		{
			this.SendPropertyChanging();
			entity.tblInvoice = this;
		}
		
		private void detach_tblLoans(tblLoan entity)
		{
			this.SendPropertyChanging();
			entity.tblInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSupplier")]
	public partial class tblSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _supplier_id;
		
		private string _supplier_name;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _address;
		
		private System.Nullable<decimal> _phone_number;
		
		private string _detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsupplier_idChanging(int value);
    partial void Onsupplier_idChanged();
    partial void Onsupplier_nameChanging(string value);
    partial void Onsupplier_nameChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onphone_numberChanging(System.Nullable<decimal> value);
    partial void Onphone_numberChanged();
    partial void OndetailChanging(string value);
    partial void OndetailChanged();
    #endregion
		
		public tblSupplier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_name", DbType="VarChar(40)")]
		public string supplier_name
		{
			get
			{
				return this._supplier_name;
			}
			set
			{
				if ((this._supplier_name != value))
				{
					this.Onsupplier_nameChanging(value);
					this.SendPropertyChanging();
					this._supplier_name = value;
					this.SendPropertyChanged("supplier_name");
					this.Onsupplier_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(40)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail", DbType="VarChar(40)")]
		public string detail
		{
			get
			{
				return this._detail;
			}
			set
			{
				if ((this._detail != value))
				{
					this.OndetailChanging(value);
					this.SendPropertyChanging();
					this._detail = value;
					this.SendPropertyChanged("detail");
					this.OndetailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSales")]
	public partial class tblSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sale_id;
		
		private System.Nullable<int> _product_id;
		
		private string _item_name;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<float> _price;
		
		private System.Nullable<float> _netPrice;
		
		private System.Nullable<int> _payment_id;
		
		private System.Nullable<int> _customer_id;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<float> _unit_profit;
		
		private string _returned;
		
		private System.Nullable<int> _invoice_id;
		
		private string _status;
		
		private System.Nullable<float> _capturedAmount;
		
		private EntityRef<tblInvoice> _tblInvoice;
		
		private EntityRef<tblPayment> _tblPayment;
		
		private EntityRef<tblProduct> _tblProduct;
		
		private EntityRef<tblCustomer> _tblCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsale_idChanging(int value);
    partial void Onsale_idChanged();
    partial void Onproduct_idChanging(System.Nullable<int> value);
    partial void Onproduct_idChanged();
    partial void Onitem_nameChanging(string value);
    partial void Onitem_nameChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(System.Nullable<float> value);
    partial void OnpriceChanged();
    partial void OnnetPriceChanging(System.Nullable<float> value);
    partial void OnnetPriceChanged();
    partial void Onpayment_idChanging(System.Nullable<int> value);
    partial void Onpayment_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onunit_profitChanging(System.Nullable<float> value);
    partial void Onunit_profitChanged();
    partial void OnreturnedChanging(string value);
    partial void OnreturnedChanged();
    partial void Oninvoice_idChanging(System.Nullable<int> value);
    partial void Oninvoice_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OncapturedAmountChanging(System.Nullable<float> value);
    partial void OncapturedAmountChanged();
    #endregion
		
		public tblSale()
		{
			this._tblInvoice = default(EntityRef<tblInvoice>);
			this._tblPayment = default(EntityRef<tblPayment>);
			this._tblProduct = default(EntityRef<tblProduct>);
			this._tblCustomer = default(EntityRef<tblCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sale_id
		{
			get
			{
				return this._sale_id;
			}
			set
			{
				if ((this._sale_id != value))
				{
					this.Onsale_idChanging(value);
					this.SendPropertyChanging();
					this._sale_id = value;
					this.SendPropertyChanged("sale_id");
					this.Onsale_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
		public System.Nullable<int> product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_name", DbType="VarChar(40)")]
		public string item_name
		{
			get
			{
				return this._item_name;
			}
			set
			{
				if ((this._item_name != value))
				{
					this.Onitem_nameChanging(value);
					this.SendPropertyChanging();
					this._item_name = value;
					this.SendPropertyChanged("item_name");
					this.Onitem_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Real")]
		public System.Nullable<float> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netPrice", DbType="Real")]
		public System.Nullable<float> netPrice
		{
			get
			{
				return this._netPrice;
			}
			set
			{
				if ((this._netPrice != value))
				{
					this.OnnetPriceChanging(value);
					this.SendPropertyChanging();
					this._netPrice = value;
					this.SendPropertyChanged("netPrice");
					this.OnnetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", DbType="Int")]
		public System.Nullable<int> payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					if (this._tblPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._tblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit_profit", DbType="Real")]
		public System.Nullable<float> unit_profit
		{
			get
			{
				return this._unit_profit;
			}
			set
			{
				if ((this._unit_profit != value))
				{
					this.Onunit_profitChanging(value);
					this.SendPropertyChanging();
					this._unit_profit = value;
					this.SendPropertyChanged("unit_profit");
					this.Onunit_profitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returned", DbType="VarChar(30)")]
		public string returned
		{
			get
			{
				return this._returned;
			}
			set
			{
				if ((this._returned != value))
				{
					this.OnreturnedChanging(value);
					this.SendPropertyChanging();
					this._returned = value;
					this.SendPropertyChanged("returned");
					this.OnreturnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="Int")]
		public System.Nullable<int> invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					if (this._tblInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capturedAmount", DbType="Real")]
		public System.Nullable<float> capturedAmount
		{
			get
			{
				return this._capturedAmount;
			}
			set
			{
				if ((this._capturedAmount != value))
				{
					this.OncapturedAmountChanging(value);
					this.SendPropertyChanging();
					this._capturedAmount = value;
					this.SendPropertyChanged("capturedAmount");
					this.OncapturedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInvoice_tblSale", Storage="_tblInvoice", ThisKey="invoice_id", OtherKey="invoice_id", IsForeignKey=true)]
		public tblInvoice tblInvoice
		{
			get
			{
				return this._tblInvoice.Entity;
			}
			set
			{
				tblInvoice previousValue = this._tblInvoice.Entity;
				if (((previousValue != value) 
							|| (this._tblInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblInvoice.Entity = null;
						previousValue.tblSales.Remove(this);
					}
					this._tblInvoice.Entity = value;
					if ((value != null))
					{
						value.tblSales.Add(this);
						this._invoice_id = value.invoice_id;
					}
					else
					{
						this._invoice_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPayment_tblSale", Storage="_tblPayment", ThisKey="payment_id", OtherKey="payment_id", IsForeignKey=true)]
		public tblPayment tblPayment
		{
			get
			{
				return this._tblPayment.Entity;
			}
			set
			{
				tblPayment previousValue = this._tblPayment.Entity;
				if (((previousValue != value) 
							|| (this._tblPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPayment.Entity = null;
						previousValue.tblSales.Remove(this);
					}
					this._tblPayment.Entity = value;
					if ((value != null))
					{
						value.tblSales.Add(this);
						this._payment_id = value.payment_id;
					}
					else
					{
						this._payment_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblSale", Storage="_tblProduct", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblSales.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblSales.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblSale", Storage="_tblCustomer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public tblCustomer tblCustomer
		{
			get
			{
				return this._tblCustomer.Entity;
			}
			set
			{
				tblCustomer previousValue = this._tblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCustomer.Entity = null;
						previousValue.tblSales.Remove(this);
					}
					this._tblCustomer.Entity = value;
					if ((value != null))
					{
						value.tblSales.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _userName;
		
		private string _passWord;
		
		private string _usertype;
		
		private string _recoveryQuestion;
		
		private string _recoveryAnswer;
		
		private string _userStatus;
		
		private System.Nullable<System.DateTime> _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassWordChanging(string value);
    partial void OnpassWordChanged();
    partial void OnusertypeChanging(string value);
    partial void OnusertypeChanged();
    partial void OnrecoveryQuestionChanging(string value);
    partial void OnrecoveryQuestionChanged();
    partial void OnrecoveryAnswerChanging(string value);
    partial void OnrecoveryAnswerChanged();
    partial void OnuserStatusChanging(string value);
    partial void OnuserStatusChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public tblUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(20)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passWord", DbType="VarChar(30)")]
		public string passWord
		{
			get
			{
				return this._passWord;
			}
			set
			{
				if ((this._passWord != value))
				{
					this.OnpassWordChanging(value);
					this.SendPropertyChanging();
					this._passWord = value;
					this.SendPropertyChanged("passWord");
					this.OnpassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="VarChar(30)")]
		public string usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this.OnusertypeChanging(value);
					this.SendPropertyChanging();
					this._usertype = value;
					this.SendPropertyChanged("usertype");
					this.OnusertypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recoveryQuestion", DbType="VarChar(100)")]
		public string recoveryQuestion
		{
			get
			{
				return this._recoveryQuestion;
			}
			set
			{
				if ((this._recoveryQuestion != value))
				{
					this.OnrecoveryQuestionChanging(value);
					this.SendPropertyChanging();
					this._recoveryQuestion = value;
					this.SendPropertyChanged("recoveryQuestion");
					this.OnrecoveryQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recoveryAnswer", DbType="VarChar(100)")]
		public string recoveryAnswer
		{
			get
			{
				return this._recoveryAnswer;
			}
			set
			{
				if ((this._recoveryAnswer != value))
				{
					this.OnrecoveryAnswerChanging(value);
					this.SendPropertyChanging();
					this._recoveryAnswer = value;
					this.SendPropertyChanged("recoveryAnswer");
					this.OnrecoveryAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userStatus", DbType="VarChar(10)")]
		public string userStatus
		{
			get
			{
				return this._userStatus;
			}
			set
			{
				if ((this._userStatus != value))
				{
					this.OnuserStatusChanging(value);
					this.SendPropertyChanging();
					this._userStatus = value;
					this.SendPropertyChanged("userStatus");
					this.OnuserStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEmployee")]
	public partial class tblEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employee_id;
		
		private string _employee_name;
		
		private System.Nullable<decimal> _employee_phone;
		
		private string _employee_address;
		
		private string _employee_shift;
		
		private System.Nullable<decimal> _salary;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _employee_title;
		
		private EntitySet<tblInvoice> _tblInvoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onemployee_nameChanging(string value);
    partial void Onemployee_nameChanged();
    partial void Onemployee_phoneChanging(System.Nullable<decimal> value);
    partial void Onemployee_phoneChanged();
    partial void Onemployee_addressChanging(string value);
    partial void Onemployee_addressChanged();
    partial void Onemployee_shiftChanging(string value);
    partial void Onemployee_shiftChanged();
    partial void OnsalaryChanging(System.Nullable<decimal> value);
    partial void OnsalaryChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onemployee_titleChanging(string value);
    partial void Onemployee_titleChanged();
    #endregion
		
		public tblEmployee()
		{
			this._tblInvoices = new EntitySet<tblInvoice>(new Action<tblInvoice>(this.attach_tblInvoices), new Action<tblInvoice>(this.detach_tblInvoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_name", DbType="VarChar(40)")]
		public string employee_name
		{
			get
			{
				return this._employee_name;
			}
			set
			{
				if ((this._employee_name != value))
				{
					this.Onemployee_nameChanging(value);
					this.SendPropertyChanging();
					this._employee_name = value;
					this.SendPropertyChanged("employee_name");
					this.Onemployee_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_phone", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> employee_phone
		{
			get
			{
				return this._employee_phone;
			}
			set
			{
				if ((this._employee_phone != value))
				{
					this.Onemployee_phoneChanging(value);
					this.SendPropertyChanging();
					this._employee_phone = value;
					this.SendPropertyChanged("employee_phone");
					this.Onemployee_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_address", DbType="VarChar(40)")]
		public string employee_address
		{
			get
			{
				return this._employee_address;
			}
			set
			{
				if ((this._employee_address != value))
				{
					this.Onemployee_addressChanging(value);
					this.SendPropertyChanging();
					this._employee_address = value;
					this.SendPropertyChanged("employee_address");
					this.Onemployee_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_shift", DbType="VarChar(10)")]
		public string employee_shift
		{
			get
			{
				return this._employee_shift;
			}
			set
			{
				if ((this._employee_shift != value))
				{
					this.Onemployee_shiftChanging(value);
					this.SendPropertyChanging();
					this._employee_shift = value;
					this.SendPropertyChanged("employee_shift");
					this.Onemployee_shiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Money")]
		public System.Nullable<decimal> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_title", DbType="VarChar(40)")]
		public string employee_title
		{
			get
			{
				return this._employee_title;
			}
			set
			{
				if ((this._employee_title != value))
				{
					this.Onemployee_titleChanging(value);
					this.SendPropertyChanging();
					this._employee_title = value;
					this.SendPropertyChanged("employee_title");
					this.Onemployee_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblInvoice", Storage="_tblInvoices", ThisKey="employee_id", OtherKey="user_id")]
		public EntitySet<tblInvoice> tblInvoices
		{
			get
			{
				return this._tblInvoices;
			}
			set
			{
				this._tblInvoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = this;
		}
		
		private void detach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLoan")]
	public partial class tblLoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _loan_id;
		
		private System.Nullable<int> _customer_id;
		
		private System.Nullable<int> _product_id;
		
		private System.Nullable<decimal> _takenAmount;
		
		private System.Nullable<decimal> _paidAmount;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<decimal> _balance;
		
		private string _paymentMethod;
		
		private System.Nullable<int> _invoice_id;
		
		private System.Nullable<System.DateTime> _last_update;
		
		private string _returned;
		
		private EntityRef<tblInvoice> _tblInvoice;
		
		private EntityRef<tblProduct> _tblProduct;
		
		private EntityRef<tblCustomer> _tblCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onloan_idChanging(int value);
    partial void Onloan_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void Onproduct_idChanging(System.Nullable<int> value);
    partial void Onproduct_idChanged();
    partial void OntakenAmountChanging(System.Nullable<decimal> value);
    partial void OntakenAmountChanged();
    partial void OnpaidAmountChanging(System.Nullable<decimal> value);
    partial void OnpaidAmountChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    partial void OnpaymentMethodChanging(string value);
    partial void OnpaymentMethodChanged();
    partial void Oninvoice_idChanging(System.Nullable<int> value);
    partial void Oninvoice_idChanged();
    partial void Onlast_updateChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updateChanged();
    partial void OnreturnedChanging(string value);
    partial void OnreturnedChanged();
    #endregion
		
		public tblLoan()
		{
			this._tblInvoice = default(EntityRef<tblInvoice>);
			this._tblProduct = default(EntityRef<tblProduct>);
			this._tblCustomer = default(EntityRef<tblCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loan_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int loan_id
		{
			get
			{
				return this._loan_id;
			}
			set
			{
				if ((this._loan_id != value))
				{
					this.Onloan_idChanging(value);
					this.SendPropertyChanging();
					this._loan_id = value;
					this.SendPropertyChanged("loan_id");
					this.Onloan_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._tblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
		public System.Nullable<int> product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_takenAmount", DbType="Money")]
		public System.Nullable<decimal> takenAmount
		{
			get
			{
				return this._takenAmount;
			}
			set
			{
				if ((this._takenAmount != value))
				{
					this.OntakenAmountChanging(value);
					this.SendPropertyChanging();
					this._takenAmount = value;
					this.SendPropertyChanged("takenAmount");
					this.OntakenAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paidAmount", DbType="Money")]
		public System.Nullable<decimal> paidAmount
		{
			get
			{
				return this._paidAmount;
			}
			set
			{
				if ((this._paidAmount != value))
				{
					this.OnpaidAmountChanging(value);
					this.SendPropertyChanging();
					this._paidAmount = value;
					this.SendPropertyChanged("paidAmount");
					this.OnpaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Money")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentMethod", DbType="VarChar(15)")]
		public string paymentMethod
		{
			get
			{
				return this._paymentMethod;
			}
			set
			{
				if ((this._paymentMethod != value))
				{
					this.OnpaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._paymentMethod = value;
					this.SendPropertyChanged("paymentMethod");
					this.OnpaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="Int")]
		public System.Nullable<int> invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					if (this._tblInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_update
		{
			get
			{
				return this._last_update;
			}
			set
			{
				if ((this._last_update != value))
				{
					this.Onlast_updateChanging(value);
					this.SendPropertyChanging();
					this._last_update = value;
					this.SendPropertyChanged("last_update");
					this.Onlast_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returned", DbType="VarChar(60)")]
		public string returned
		{
			get
			{
				return this._returned;
			}
			set
			{
				if ((this._returned != value))
				{
					this.OnreturnedChanging(value);
					this.SendPropertyChanging();
					this._returned = value;
					this.SendPropertyChanged("returned");
					this.OnreturnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblInvoice_tblLoan", Storage="_tblInvoice", ThisKey="invoice_id", OtherKey="invoice_id", IsForeignKey=true)]
		public tblInvoice tblInvoice
		{
			get
			{
				return this._tblInvoice.Entity;
			}
			set
			{
				tblInvoice previousValue = this._tblInvoice.Entity;
				if (((previousValue != value) 
							|| (this._tblInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblInvoice.Entity = null;
						previousValue.tblLoans.Remove(this);
					}
					this._tblInvoice.Entity = value;
					if ((value != null))
					{
						value.tblLoans.Add(this);
						this._invoice_id = value.invoice_id;
					}
					else
					{
						this._invoice_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblLoan", Storage="_tblProduct", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblLoans.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblLoans.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblLoan", Storage="_tblCustomer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public tblCustomer tblCustomer
		{
			get
			{
				return this._tblCustomer.Entity;
			}
			set
			{
				tblCustomer previousValue = this._tblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCustomer.Entity = null;
						previousValue.tblLoans.Remove(this);
					}
					this._tblCustomer.Entity = value;
					if ((value != null))
					{
						value.tblLoans.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCustomer")]
	public partial class tblCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _customer_name;
		
		private string _customer_phone;
		
		private string _customer_address;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<double> _loanLimit;
		
		private string _cust_level;
		
		private System.Nullable<System.DateTime> _last_update;
		
		private EntitySet<tblPayment> _tblPayments;
		
		private EntitySet<tblInvoice> _tblInvoices;
		
		private EntitySet<tblSale> _tblSales;
		
		private EntitySet<tblLoan> _tblLoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_nameChanging(string value);
    partial void Oncustomer_nameChanged();
    partial void Oncustomer_phoneChanging(string value);
    partial void Oncustomer_phoneChanged();
    partial void Oncustomer_addressChanging(string value);
    partial void Oncustomer_addressChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnloanLimitChanging(System.Nullable<double> value);
    partial void OnloanLimitChanged();
    partial void Oncust_levelChanging(string value);
    partial void Oncust_levelChanged();
    partial void Onlast_updateChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updateChanged();
    #endregion
		
		public tblCustomer()
		{
			this._tblPayments = new EntitySet<tblPayment>(new Action<tblPayment>(this.attach_tblPayments), new Action<tblPayment>(this.detach_tblPayments));
			this._tblInvoices = new EntitySet<tblInvoice>(new Action<tblInvoice>(this.attach_tblInvoices), new Action<tblInvoice>(this.detach_tblInvoices));
			this._tblSales = new EntitySet<tblSale>(new Action<tblSale>(this.attach_tblSales), new Action<tblSale>(this.detach_tblSales));
			this._tblLoans = new EntitySet<tblLoan>(new Action<tblLoan>(this.attach_tblLoans), new Action<tblLoan>(this.detach_tblLoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_name", DbType="VarChar(40)")]
		public string customer_name
		{
			get
			{
				return this._customer_name;
			}
			set
			{
				if ((this._customer_name != value))
				{
					this.Oncustomer_nameChanging(value);
					this.SendPropertyChanging();
					this._customer_name = value;
					this.SendPropertyChanged("customer_name");
					this.Oncustomer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_phone", DbType="VarChar(20)")]
		public string customer_phone
		{
			get
			{
				return this._customer_phone;
			}
			set
			{
				if ((this._customer_phone != value))
				{
					this.Oncustomer_phoneChanging(value);
					this.SendPropertyChanging();
					this._customer_phone = value;
					this.SendPropertyChanged("customer_phone");
					this.Oncustomer_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_address", DbType="VarChar(40)")]
		public string customer_address
		{
			get
			{
				return this._customer_address;
			}
			set
			{
				if ((this._customer_address != value))
				{
					this.Oncustomer_addressChanging(value);
					this.SendPropertyChanging();
					this._customer_address = value;
					this.SendPropertyChanged("customer_address");
					this.Oncustomer_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loanLimit", DbType="Float")]
		public System.Nullable<double> loanLimit
		{
			get
			{
				return this._loanLimit;
			}
			set
			{
				if ((this._loanLimit != value))
				{
					this.OnloanLimitChanging(value);
					this.SendPropertyChanging();
					this._loanLimit = value;
					this.SendPropertyChanged("loanLimit");
					this.OnloanLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_level", DbType="VarChar(50)")]
		public string cust_level
		{
			get
			{
				return this._cust_level;
			}
			set
			{
				if ((this._cust_level != value))
				{
					this.Oncust_levelChanging(value);
					this.SendPropertyChanging();
					this._cust_level = value;
					this.SendPropertyChanged("cust_level");
					this.Oncust_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_update
		{
			get
			{
				return this._last_update;
			}
			set
			{
				if ((this._last_update != value))
				{
					this.Onlast_updateChanging(value);
					this.SendPropertyChanging();
					this._last_update = value;
					this.SendPropertyChanged("last_update");
					this.Onlast_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblPayment", Storage="_tblPayments", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<tblPayment> tblPayments
		{
			get
			{
				return this._tblPayments;
			}
			set
			{
				this._tblPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblInvoice", Storage="_tblInvoices", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<tblInvoice> tblInvoices
		{
			get
			{
				return this._tblInvoices;
			}
			set
			{
				this._tblInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblSale", Storage="_tblSales", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<tblSale> tblSales
		{
			get
			{
				return this._tblSales;
			}
			set
			{
				this._tblSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblLoan", Storage="_tblLoans", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<tblLoan> tblLoans
		{
			get
			{
				return this._tblLoans;
			}
			set
			{
				this._tblLoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPayments(tblPayment entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = this;
		}
		
		private void detach_tblPayments(tblPayment entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = null;
		}
		
		private void attach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = this;
		}
		
		private void detach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = null;
		}
		
		private void attach_tblSales(tblSale entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = this;
		}
		
		private void detach_tblSales(tblSale entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = null;
		}
		
		private void attach_tblLoans(tblLoan entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = this;
		}
		
		private void detach_tblLoans(tblLoan entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = null;
		}
	}
}
#pragma warning restore 1591
